!function(){"use strict";var e="",t=e+"d3610e9c6dce3cb370d8.svg",r=e+"d38272e02bb4f1ab1c37.svg",o=e+"40608da7369d39bc1077.svg",n=e+"d73f076c46eb5467f5fc.svg";const c=(e,t,r)=>{(e=>!!e.some(e=>!e.validity.valid))(e)?(t.disabled=!0,t.classList.add(r.inactiveButtonClass)):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},a=(e,t,r)=>{t.forEach(t=>{l(e,t,r)})},s={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn-disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},l=(e,t,r)=>{const o=t.id+"-error",n=e.querySelector("#"+o);t.classList.remove(r.inputErrorClass),n.textContent=""};function i(e,t,r,o){e.textContent=t?r:o}const d=document.querySelector("#image1");d.src=t,d.alt="Logo";const u=document.querySelector("#image2"),m=document.querySelector("#image3");m.src=r,m.alt="Edit button img";const h=document.querySelector("#image4");let f,_;h.src=o,h.alt="Plus icon",document.querySelector("#profile__pencil").src=n;const S=document.querySelector("#img-modal"),v=S.querySelector("#profile-img-form"),y=S.querySelector(".modal__close-btn"),p=S.querySelector(".modal__form"),b=p.querySelector("#profile-img-input"),q=document.querySelector(".profile__img-btn"),g=document.querySelector(".profile__edit-btn"),L=document.querySelector("#edit-profile-modal"),k=L.querySelector(".modal__close-btn"),E=document.querySelector(".profile__add-btn"),C=document.querySelector(".profile__name"),A=document.querySelector(".profile__description"),U=L.querySelector(".modal__form"),x=document.querySelector("#new-post-modal"),D=x.querySelector(".modal__form"),I=x.querySelector(".modal__close-btn"),$=x.querySelector(".modal__submit-btn"),R=x.querySelector("#card-img-input"),w=x.querySelector("#card-caption-input"),B=document.querySelector(".cards__list"),P=document.querySelector("#card-template"),T=(P.content.cloneNode(!0).querySelector(".card"),document.querySelector("#delete-modal")),N=T.querySelector(".modal__delete-form"),O=T.querySelector(".modal__submit-btn-cancel"),j=document.querySelector("#preview-modal"),J=j.querySelector(".modal__close-btn"),H=j.querySelector(".modal__image"),z=j.querySelector(".modal__caption"),M=Array.from(U.querySelectorAll(s.inputSelector)),F=document.querySelector("#profile-name-input"),G=document.querySelector("#profile-description-input");function K(e){e.target.classList.contains("modal")&&e.target.classList.contains("modal_is-opened")&&W(e.target)}function Q(e){const t=document.querySelector(".modal_is-opened");"Escape"===e.key&&t&&W(t)}function V(e){e.classList.add("modal_is-opened"),e.addEventListener("mousedown",K),document.addEventListener("keydown",Q)}function W(e){e.classList.remove("modal_is-opened"),e.removeEventListener("mousedown",K),document.removeEventListener("keydown",Q)}function X(e){const t=P.content.cloneNode(!0).querySelector(".card"),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-button"),c=t.querySelector(".card__delete-btn");return e.isLiked&&n.classList.add("card__like-button_active"),n.addEventListener("click",t=>function(e,t){let r=Boolean;r=!!e.target.classList.contains("card__like-button_active"),Y.handleLiked(t,r).then(()=>{e.target.classList.toggle("card__like-button_active")}).catch(e=>{console.log(e)})}(t,e._id)),c.addEventListener("click",r=>{!function(e,t){V(T),f=e,_=t}(t,e._id)}),o.src=e.link,o.alt=e.name,r.textContent=e.name,o.addEventListener("click",()=>{H.src=e.link,H.alt=e.name,z.textContent=e.name,V(j)}),J.addEventListener("click",()=>{W(j)}),t}const Y=new class{constructor({baseUrl:e,headers:t}){this.baseUrl=e,this.headers=t}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this.baseUrl}/cards`,{headers:this.headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this.baseUrl}/users/me`,{headers:this.headers}).then(this._checkResponse)}editUserInfo({name:e,about:t}){return fetch(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}postCard({name:e,link:t}){return fetch(`${this.baseUrl}/cards`,{method:"POST",headers:this.headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}editAvatarInfo(e){return fetch(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this.baseUrl}/cards/${e}`,{method:"DELETE",headers:this.headers}).then(this._checkResponse)}handleLiked(e,t){return fetch(`${this.baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this.headers}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"cb2d50ae-6f63-4d7f-a3f6-08c31f11128a","Content-Type":"application/json"}});var Z;Y.getAppInfo().then(([e,t])=>{e.forEach(function(e){const t=X(e);B.append(t)}),C.textContent=t.name,A.textContent=t.about,u.src=t.avatar}).catch(e=>{console.log(e)}),U.addEventListener("submit",function(e){e.preventDefault();const t=e.submitter;i(t,!0,"Saving...","Save"),Y.editUserInfo({name:F.value,about:G.value}).then(e=>{C.textContent=e.name,A.textContent=e.about,W(L)}).catch(e=>{console.log(e)}).finally(()=>{i(t,!1,"Saving...","Save")})}),D.addEventListener("submit",function(e){e.preventDefault();const t=e.submitter;i(t,!0,"Saving...","Save");const r={name:w.value,link:R.value};Y.postCard(r).then(e=>{const t=X(e);B.prepend(t),W(x),D.reset(),c(M,$,s)}).catch(e=>{console.log(e)}).finally(()=>{i(t,!1,"Saving...","Save")})}),N.addEventListener("submit",function(e){const t=e.submitter;i(t,!0,"Deleting...","Delete"),e.preventDefault(),Y.deleteCard(_).then(()=>{f&&f.remove(),W(T)}).catch(e=>{console.log(e)}).finally(()=>{i(t,!1,"Deleting...","Delete")})}),v.addEventListener("submit",function(e){console.log("asdsad"),e.preventDefault();const t=e.submitter;i(t,!0,"Saving...","Save"),Y.editAvatarInfo(b.value).then(e=>{u.src=e.avatar,p.reset(),t.disabled=!0,W(S)}).catch(e=>console.log(e)).finally(()=>{i(t,!1,"Saving...","Save")})}),O.addEventListener("click",e=>{e.preventDefault(),W(T)}),q.addEventListener("click",function(){console.log("afsdsd"),V(S)}),y.addEventListener("click",()=>{W(S)}),g.addEventListener("click",function(){V(L),F.value=C.textContent,G.value=A.textContent,a(U,M,s),c(Array.from(U.querySelectorAll(s.inputSelector)),U.querySelector(s.submitButtonSelector),s)}),k.addEventListener("click",function(){W(L)}),E.addEventListener("click",function(){D.reset();const e=Array.from(D.querySelectorAll(s.inputSelector));a(D,e,s),V(x)}),I.addEventListener("click",function(){W(x)}),Z=s,Array.from(document.querySelectorAll(Z.formSelector)).forEach(e=>{((e,t)=>{const r=Array.from(e.querySelectorAll(t.inputSelector)),o=e.querySelector(t.submitButtonSelector);c(r,o,t),c(r,o,t),r.forEach(n=>{n.addEventListener("input",function(){((e,t,r)=>{t.validity.valid?l(e,t,r):((e,t,r,o)=>{const n=t.id+"-error",c=e.querySelector("#"+n);c.textContent=r,c.classList.add(o.errorClass),t.classList.add(o.inputErrorClass)})(e,t,t.validationMessage,r)})(e,n,t),c(r,o,t)})})})(e,Z)})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,